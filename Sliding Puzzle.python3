from collections import deque
from typing import List

class Solution:
    def slidingPuzzle(self, board: List[List[int]]) -> int:
        target = "123450"
        start = ''.join(str(num) for row in board for num in row)
        moves = [(1, 3), (0, 2, 4), (1, 5), (0, 4), (1, 3, 5), (2, 4)]

        if start == target:
            return 0

        queue = deque([(start, start.index('0'), 0)])
        visited = {start}

        while queue:
            current, zero_pos, steps = queue.popleft()

            for move in moves[zero_pos]:
                new_board = list(current)
                new_board[zero_pos], new_board[move] = new_board[move], new_board[zero_pos]
                new_state = ''.join(new_board)

                if new_state == target:
                    return steps + 1

                if new_state not in visited:
                    visited.add(new_state)
                    queue.append((new_state, move, steps + 1))

        return -1
