class Solution:
    def canCross(self, stones: list[int]) -> bool:
        stone_set = set(stones)
        last_stone = stones[-1]
        memo = {}

        def dfs(position, jump):
            if (position, jump) in memo:
                return memo[(position, jump)]
            if position == last_stone:
                return True
            for next_jump in (jump - 1, jump, jump + 1):
                if next_jump > 0 and (position + next_jump) in stone_set:
                    if dfs(position + next_jump, next_jump):
                        memo[(position, jump)] = True
                        return True
            memo[(position, jump)] = False
            return False

        if stones[1] != 1:
            return False

        return dfs(1, 1)
