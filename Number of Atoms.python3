from collections import defaultdict

class Solution:
    def countOfAtoms(self, formula: str) -> str:
        def parse():
            n = len(formula)
            stack = [defaultdict(int)]
            i = 0

            while i < n:
                if formula[i] == '(':
                    stack.append(defaultdict(int))
                    i += 1
                elif formula[i] == ')':
                    i += 1
                    num = 0
                    while i < n and formula[i].isdigit():
                        num = num * 10 + int(formula[i])
                        i += 1
                    num = max(num, 1)
                    top = stack.pop()
                    for atom, count in top.items():
                        stack[-1][atom] += count * num
                else:
                    j = i + 1
                    while j < n and formula[j].islower():
                        j += 1
                    atom = formula[i:j]
                    i = j
                    num = 0
                    while i < n and formula[i].isdigit():
                        num = num * 10 + int(formula[i])
                        i += 1
                    num = max(num, 1)
                    stack[-1][atom] += num
            
            return stack[-1]

        atom_count = parse()
        result = []
        for atom in sorted(atom_count):
            result.append(atom)
            if atom_count[atom] > 1:
                result.append(str(atom_count[atom]))
        
        return ''.join(result)
